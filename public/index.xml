<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cloud Native Central</title>
    <link>https://blairwu77.github.io/cncentral.github.io/</link>
    <description>Recent content on Cloud Native Central</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 03 Feb 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://blairwu77.github.io/cncentral.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Devcontainers for cloud-native application development</title>
      <link>https://blairwu77.github.io/cncentral.github.io/posts/devcontainers-for-cloud-native-application-development/</link>
      <pubDate>Sat, 03 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://blairwu77.github.io/cncentral.github.io/posts/devcontainers-for-cloud-native-application-development/</guid>
      <description>&lt;p&gt;Containers changed the way we develop, package, and distribute applications. This helped teams accelerate development and ensure their code worked consistently across different environments and infrastructures. To a large extent, this enabled write once and run anywhere. Docker made this easy by providing tools to create, manage, and package application code and dependencies as images. We could run a container instance from that image wherever a container runtime exists. Standardizing image and runtime formats helped ensure we could take an image and run it anywhere and not worry about the underlying infrastructure. This also led to the proliferation of microservices-based application architectures, where an application comprises several services running within containers to deliver the expected functionality. Most cloud-native and modern application architectures use microservices to implement the necessary functionality. When developing an application with multiple microservice dependencies, a developer must ensure the development environment is suitably set up to handle all required dependencies.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using Bicep to provision Azure Red Hat OpenShift cluster</title>
      <link>https://blairwu77.github.io/cncentral.github.io/posts/using-bicep-to-provision-azure-red-hat-openshift-cluster/</link>
      <pubDate>Fri, 01 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://blairwu77.github.io/cncentral.github.io/posts/using-bicep-to-provision-azure-red-hat-openshift-cluster/</guid>
      <description>&lt;p&gt;Azure Red Hat OpenShift (ARO) service provides fully managed and highly available OpenShift clusters on Azure jointly operated by Microsoft and Red Hat. There are different ways to provision an ARO cluster.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Azure Portal&lt;/li&gt;&#xA;&lt;li&gt;Azure CLI or Azure PowerShell&lt;/li&gt;&#xA;&lt;li&gt;Azure Resource Manager (ARM) / Bicep templates&lt;/li&gt;&#xA;&lt;li&gt;Red Hat Advanced Cluster Management (RHACM)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;This article will explore using Bicep language to provision an ARO cluster.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Examples in this article use Azure CLI for interacting with Azure resources and deployments.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Fully Automated Kubernetes Cluster Deployment on Azure in Under 8 Minutes</title>
      <link>https://blairwu77.github.io/cncentral.github.io/posts/fully-automated-kubernetes-cluster-deployment-on-azure-in-under-8-minutes/</link>
      <pubDate>Sat, 26 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://blairwu77.github.io/cncentral.github.io/posts/fully-automated-kubernetes-cluster-deployment-on-azure-in-under-8-minutes/</guid>
      <description>&lt;p&gt;In an earlier article, I had written about &lt;a href=&#34;https://blairwu77.github.io/cncentral.github.io/posts/installing-and-configuring-kubernetes-cluster-using-kubeadm-on-ubuntu/&#34;&gt;provisioning a virtual Kubernetes cluster using kubeadm&lt;/a&gt;. I use this method on a laptop with limited resources. This is good to a large extent but not good enough when I want to scale my experiments and learning. This is where I started looking at creating my Kubernetes lab on Azure. I needed something that could spin fast and without manual intervention. Given my interest in the Bicep language, I wrote a Bicep template to perform this deployment.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Installing and Configuring Kubernetes Cluster using Kubeadm on Ubuntu</title>
      <link>https://blairwu77.github.io/cncentral.github.io/posts/installing-and-configuring-kubernetes-cluster-using-kubeadm-on-ubuntu/</link>
      <pubDate>Sun, 13 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://blairwu77.github.io/cncentral.github.io/posts/installing-and-configuring-kubernetes-cluster-using-kubeadm-on-ubuntu/</guid>
      <description>&lt;p&gt;There are many ways to install and configure Kubernetes cluster for learning and development purposes. We can use &lt;a href=&#34;https://www.docker.com/products/docker-desktop/&#34;&gt;Docker Desktop&lt;/a&gt;, &lt;a href=&#34;https://rancherdesktop.io/&#34;&gt;Rancher Desktop&lt;/a&gt;, &lt;a href=&#34;https://podman-desktop.io/&#34;&gt;Podman Desktop&lt;/a&gt;, &lt;a href=&#34;https://minikube.sigs.k8s.io/docs/start/&#34;&gt;minikube&lt;/a&gt;, or &lt;a href=&#34;https://microk8s.io/&#34;&gt;microk8s&lt;/a&gt; to quickly create a single node cluster for our development work. These are good for quick development work but not so much when we need a multi-node cluster with additional services. For such a scenario, we can use virtual machines and configure a Kubernetes cluster using &lt;a href=&#34;https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/&#34;&gt;kubeadm&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;This article examines the steps necessary to set up a virtual Kubernetes cluster.&lt;/p&gt;</description>
    </item>
    <item>
      <title>About</title>
      <link>https://blairwu77.github.io/cncentral.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://blairwu77.github.io/cncentral.github.io/about/</guid>
      <description></description>
    </item>
    <item>
      <title>Contact</title>
      <link>https://blairwu77.github.io/cncentral.github.io/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://blairwu77.github.io/cncentral.github.io/contact/</guid>
      <description></description>
    </item>
    <item>
      <title>Elements</title>
      <link>https://blairwu77.github.io/cncentral.github.io/elements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://blairwu77.github.io/cncentral.github.io/elements/</guid>
      <description></description>
    </item>
    <item>
      <title>Videos</title>
      <link>https://blairwu77.github.io/cncentral.github.io/videos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://blairwu77.github.io/cncentral.github.io/videos/</guid>
      <description></description>
    </item>
  </channel>
</rss>
